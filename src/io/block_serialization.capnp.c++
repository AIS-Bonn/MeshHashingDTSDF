// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: block_serialization.capnp

#include "block_serialization.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<50> b_ace7f2d577b1bbea = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
     26,   0,   0,   0,   1,   0,   0,   0,
    208,  66,  55, 167,  91, 115,  23, 164,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0, 242,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  23,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  77,  97, 112,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    197,  48,  34,  20,  78, 129, 224, 129,
      1,   0,   0,   0,  50,   0,   0,   0,
     69, 110, 116, 114, 121,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     56,   0,   0,   0,   2,   0,   1,   0,
    101, 110, 116, 114, 105, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    197,  48,  34,  20,  78, 129, 224, 129,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   1,   0,
      5,   0,   0,   0,  34,   0,   0,   0,
      5,   0,   0,   0,  50,   0,   0,   0,
     75, 101, 121,   0,   0,   0,   0,   0,
     86,  97, 108, 117, 101,   0,   0,   0, }
};
::capnp::word const* const bp_ace7f2d577b1bbea = b_ace7f2d577b1bbea.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_ace7f2d577b1bbea[] = {
  &s_81e0814e142230c5,
};
static const uint16_t m_ace7f2d577b1bbea[] = {0};
static const uint16_t i_ace7f2d577b1bbea[] = {0};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_ace7f2d577b1bbea[] = {
  { 16777216,  ::block_serialization::Map< ::capnp::AnyPointer,  ::capnp::AnyPointer>::Entry::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_ace7f2d577b1bbea = {
  0xace7f2d577b1bbea, b_ace7f2d577b1bbea.words, 50, d_ace7f2d577b1bbea, m_ace7f2d577b1bbea,
  1, 1, i_ace7f2d577b1bbea, nullptr, nullptr, { &s_ace7f2d577b1bbea, nullptr, bd_ace7f2d577b1bbea, 0, sizeof(bd_ace7f2d577b1bbea) / sizeof(bd_ace7f2d577b1bbea[0]), nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<49> b_81e0814e142230c5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    197,  48,  34,  20,  78, 129, 224, 129,
     30,   0,   0,   0,   1,   0,   0,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   0,   0,
     21,   0,   0,   0,  34,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  77,  97, 112,  46,  69, 110,
    116, 114, 121,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    107, 101, 121,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   1,   0,   0,   0,   0,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
     18,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_81e0814e142230c5 = b_81e0814e142230c5.words;
#if !CAPNP_LITE
static const uint16_t m_81e0814e142230c5[] = {0, 1};
static const uint16_t i_81e0814e142230c5[] = {0, 1};
const ::capnp::_::RawSchema s_81e0814e142230c5 = {
  0x81e0814e142230c5, b_81e0814e142230c5.words, 49, nullptr, m_81e0814e142230c5,
  0, 2, i_81e0814e142230c5, nullptr, nullptr, { &s_81e0814e142230c5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_ee0a4286e056eb82 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    130, 235,  86, 224, 134,  66,  10, 238,
     26,   0,   0,   0,   1,   0,   2,   0,
    208,  66,  55, 167,  91, 115,  23, 164,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  67, 111, 111, 114, 100, 105,
    110,  97, 116, 101,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     80,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     77,   0,   0,   0,  18,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    120,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    122,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_ee0a4286e056eb82 = b_ee0a4286e056eb82.words;
#if !CAPNP_LITE
static const uint16_t m_ee0a4286e056eb82[] = {0, 1, 2};
static const uint16_t i_ee0a4286e056eb82[] = {0, 1, 2};
const ::capnp::_::RawSchema s_ee0a4286e056eb82 = {
  0xee0a4286e056eb82, b_ee0a4286e056eb82.words, 64, nullptr, m_ee0a4286e056eb82,
  0, 3, i_ee0a4286e056eb82, nullptr, nullptr, { &s_ee0a4286e056eb82, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<57> b_9fe3157ca1614f90 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    144,  79,  97, 161, 124,  21, 227, 159,
     26,   0,   0,   0,   1,   0,   0,   0,
    208,  66,  55, 167,  91, 115,  23, 164,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  42,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  86, 111, 120, 101, 108,  65,
    114, 114,  97, 121,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
    115, 100, 102,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    119, 101, 105, 103, 104, 116,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9fe3157ca1614f90 = b_9fe3157ca1614f90.words;
#if !CAPNP_LITE
static const uint16_t m_9fe3157ca1614f90[] = {0, 1};
static const uint16_t i_9fe3157ca1614f90[] = {0, 1};
const ::capnp::_::RawSchema s_9fe3157ca1614f90 = {
  0x9fe3157ca1614f90, b_9fe3157ca1614f90.words, 57, nullptr, m_9fe3157ca1614f90,
  0, 2, i_9fe3157ca1614f90, nullptr, nullptr, { &s_9fe3157ca1614f90, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<38> b_9cf0f004e5348a40 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     64, 138,  52, 229,   4, 240, 240, 156,
     26,   0,   0,   0,   1,   0,   0,   0,
    208,  66,  55, 167,  91, 115,  23, 164,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,   2,   1,   0,   0,
     33,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     29,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  66, 108, 111,  99, 107,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   3,   0,   1,   0,
     40,   0,   0,   0,   2,   0,   1,   0,
    118, 111, 120, 101, 108,  65, 114, 114,
     97, 121, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      4,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9cf0f004e5348a40 = b_9cf0f004e5348a40.words;
#if !CAPNP_LITE
static const uint16_t m_9cf0f004e5348a40[] = {0};
static const uint16_t i_9cf0f004e5348a40[] = {0};
const ::capnp::_::RawSchema s_9cf0f004e5348a40 = {
  0x9cf0f004e5348a40, b_9cf0f004e5348a40.words, 38, nullptr, m_9cf0f004e5348a40,
  0, 1, i_9cf0f004e5348a40, nullptr, nullptr, { &s_9cf0f004e5348a40, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<72> b_f0bc2520934f8277 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    119, 130,  79, 147,  32,  37, 188, 240,
     26,   0,   0,   0,   1,   0,   0,   0,
    208,  66,  55, 167,  91, 115,  23, 164,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 108, 111,  99, 107,  95, 115, 101,
    114, 105,  97, 108, 105, 122,  97, 116,
    105, 111, 110,  46,  99,  97, 112, 110,
    112,  58,  66, 108, 111,  99, 107,  77,
     97, 112,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
     98, 108, 111,  99, 107, 115,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      1,   0,   0,   0,  31,   0,   0,   0,
      4,   0,   0,   0,   2,   0,   1,   0,
    234, 187, 177, 119, 213, 242, 231, 172,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,  39,   0,   0,   0,
      8,   0,   0,   0,   1,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    130, 235,  86, 224, 134,  66,  10, 238,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     64, 138,  52, 229,   4, 240, 240, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    118, 111, 120, 101, 108,  65, 114, 114,
     97, 121, 115,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    144,  79,  97, 161, 124,  21, 227, 159,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_f0bc2520934f8277 = b_f0bc2520934f8277.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_f0bc2520934f8277[] = {
  &s_9fe3157ca1614f90,
  &s_ace7f2d577b1bbea,
};
static const uint16_t m_f0bc2520934f8277[] = {0, 1};
static const uint16_t i_f0bc2520934f8277[] = {0, 1};
KJ_CONSTEXPR(const) ::capnp::_::RawBrandedSchema::Dependency bd_f0bc2520934f8277[] = {
  { 16777216,  ::block_serialization::Map< ::block_serialization::Coordinate,  ::block_serialization::Block>::_capnpPrivate::brand() },
};
const ::capnp::_::RawSchema s_f0bc2520934f8277 = {
  0xf0bc2520934f8277, b_f0bc2520934f8277.words, 72, d_f0bc2520934f8277, m_f0bc2520934f8277,
  2, 2, i_f0bc2520934f8277, nullptr, nullptr, { &s_f0bc2520934f8277, nullptr, bd_f0bc2520934f8277, 0, sizeof(bd_f0bc2520934f8277) / sizeof(bd_f0bc2520934f8277[0]), nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace block_serialization {

// Coordinate
constexpr uint16_t Coordinate::_capnpPrivate::dataWordSize;
constexpr uint16_t Coordinate::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Coordinate::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Coordinate::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// VoxelArray
constexpr uint16_t VoxelArray::_capnpPrivate::dataWordSize;
constexpr uint16_t VoxelArray::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind VoxelArray::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* VoxelArray::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Block
constexpr uint16_t Block::_capnpPrivate::dataWordSize;
constexpr uint16_t Block::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Block::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Block::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// BlockMap
constexpr uint16_t BlockMap::_capnpPrivate::dataWordSize;
constexpr uint16_t BlockMap::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind BlockMap::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* BlockMap::_capnpPrivate::schema;
#endif  // !CAPNP_LITE


}  // namespace

